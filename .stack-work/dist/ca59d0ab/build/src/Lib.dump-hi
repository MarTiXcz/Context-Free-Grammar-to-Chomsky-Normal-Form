
==================== FINAL INTERFACE ====================
2017-03-23 19:31:41.6654562 UTC

interface flp-fun-xzemek04-0.1.0.0-FpSIZxxNtcn4P8YM06k4YV:Lib 8002
  interface hash: a9e5868c4da818ecb4cce144719db8a3
  ABI hash: 8f3fdf5e127cbbfc5d997595a4f3f6b4
  export-list hash: eaa42f261caa1a42cd396780f81b3618
  orphan hash: 693e9af84d3dfcc71e640e005bdc5e2e
  flag hash: 6ed349eed6d36eaa65491e7cfcba6eca
  sig of: Nothing
  used TH splices: False
  where
exports:
  Lib.parseArgs
  Lib.programOptions
  Lib.version
  Lib.Opts{Lib.Opts optVal option1 option2 optionI}
module dependencies:
package dependencies: Win32-2.3.1.1@Win32-2.3.1.1
                      ansi-terminal-0.6.2.3@ansi-terminal-0.6.2.3-Az560Cs0ObY6ZODYjxtBiR
                      ansi-wl-pprint-0.6.7.3@ansi-wl-pprint-0.6.7.3-DiRD02X4Bp4CayfqPjYmEo
                      array-0.5.1.1@array-0.5.1.1 base-4.9.1.0*
                      bytestring-0.10.8.1@bytestring-0.10.8.1
                      containers-0.5.7.1@containers-0.5.7.1*
                      deepseq-1.4.2.0@deepseq-1.4.2.0 directory-1.3.0.0@directory-1.3.0.0
                      filepath-1.4.1.1@filepath-1.4.1.1 ghc-prim-0.5.0.0
                      integer-gmp-1.0.0.1
                      optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-SWjmfay0WD4jZNxwNzmOL
                      process-1.4.3.0@process-1.4.3.0 time-1.6.0.1@time-1.6.0.1
                      transformers-0.5.2.0@transformers-0.5.2.0
orphans: base-4.9.1.0:GHC.Base base-4.9.1.0:GHC.Float
         time-1.6.0.1@time-1.6.0.1:Data.Time.Calendar.Gregorian
         time-1.6.0.1@time-1.6.0.1:Data.Time.Format.Parse
         time-1.6.0.1@time-1.6.0.1:Data.Time.LocalTime.LocalTime
family instance modules: base-4.9.1.0:Control.Applicative
                         base-4.9.1.0:Data.Complex base-4.9.1.0:Data.Either
                         base-4.9.1.0:Data.Functor.Const base-4.9.1.0:Data.Functor.Identity
                         base-4.9.1.0:Data.List.NonEmpty base-4.9.1.0:Data.Monoid
                         base-4.9.1.0:Data.Semigroup base-4.9.1.0:Data.Type.Equality
                         base-4.9.1.0:Data.Version base-4.9.1.0:Data.Void
                         base-4.9.1.0:GHC.Exts base-4.9.1.0:GHC.Generics
                         base-4.9.1.0:GHC.IO.Exception base-4.9.1.0:GHC.TypeLits
                         containers-0.5.7.1@containers-0.5.7.1:Data.Sequence
import  -/  base-4.9.1.0:Data.Foldable 254e836c2d813d34e47feb29bb8d40ed
import  -/  base-4.9.1.0:Data.Functor 682cc832c233b71cec70179490a08631
import  -/  base-4.9.1.0:Data.Semigroup 843942ffedd25dfb5c3241a1a495b346
import  -/  base-4.9.1.0:GHC.Base 4caea1123ecf4b46e27cbccd6d279377
import  -/  base-4.9.1.0:GHC.Show eca5834daba3b6a2bbbe64ab52056707
import  -/  base-4.9.1.0:Prelude 74b3e204395920329f6de9d97206abe9
import  -/  base-4.9.1.0:System.IO 5daf3f384209c11d9566e3409af8ec5d
import  -/  containers-0.5.7.1@containers-0.5.7.1:Data.Sequence bf1f9ba63eab3de2e93934dd752ce670
import  -/  ghc-prim-0.5.0.0:GHC.Types 89f8de4f08018c9177c98d979eae0e45
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-SWjmfay0WD4jZNxwNzmOL:Options.Applicative 3506ac0732ba2e6beb4536db8d4b08eb
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-SWjmfay0WD4jZNxwNzmOL:Options.Applicative.Builder 38da28962cf0089aba6936d46774750d
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-SWjmfay0WD4jZNxwNzmOL:Options.Applicative.Extra 6baea192262259ed29fd9d8dd3d8ffec
import  -/  optparse-applicative-0.13.2.0@optparse-applicative-0.13.2.0-SWjmfay0WD4jZNxwNzmOL:Options.Applicative.Types 1bcdc227e715ef9c89335cbad90974bb
c04f50466584064a6deb6e611b12ed1c
  $tc'Opts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   138864239976506##
                   8665583300292766377##
                   Lib.$trModule
                   Lib.$tc'Opts1) -}
ea86ae03fd3018055240f642a1975c05
  $tc'Opts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "'Opts"#) -}
4b701436e59c4af6395904eb8b8fd519
  $tcOpts :: GHC.Types.TyCon
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.TyCon
                   14843173481992340257##
                   7952512113137331250##
                   Lib.$trModule
                   Lib.$tcOpts1) -}
be8303b2c1a97daaf5878ae5768c07a2
  $tcOpts1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Opts"#) -}
b4a97050fe554eb9e6d3098206ed9a52
  $trModule :: GHC.Types.Module
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (GHC.Types.Module Lib.$trModule2 Lib.$trModule1) -}
44ad5e32c7bdcb3a49f96efd3138af0d
  $trModule1 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS "Lib"#) -}
d6ec540e30432d92d1ef3980dd92af49
  $trModule2 :: GHC.Types.TrName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (GHC.Types.TrNameS
                   "flp-fun-xzemek04-0.1.0.0-FpSIZxxNtcn4P8YM06k4YV"#) -}
d7ab401e50d1fef11d2116d0817f3262
  data Opts
    = Opts {optionI :: !GHC.Types.Bool,
            option1 :: !GHC.Types.Bool,
            option2 :: !GHC.Types.Bool,
            optVal :: !GHC.Base.String}
5e90a15180589a03e818875e58f5ccb4
  optVal :: Lib.Opts -> GHC.Base.String
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLLS),1*U(A,A,A,U)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Opts) ->
                 case ds of wild { Lib.Opts ds1 ds2 ds3 ds4 -> ds4 }) -}
958acb4561a5d8ee5c55688f9aa7aa96
  option1 :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LSLL),1*U(A,U,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Opts) ->
                 case ds of wild { Lib.Opts ds1 ds2 ds3 ds4 -> ds2 }) -}
c51dde90b93aebe6c82cd123a00c1648
  option2 :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(LLSL),1*U(A,A,U,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Opts) ->
                 case ds of wild { Lib.Opts ds1 ds2 ds3 ds4 -> ds3 }) -}
ffc186df4a1fade9d4a23aea629d1bee
  optionI :: Lib.Opts -> GHC.Types.Bool
  RecSel Left Lib.Opts
  {- Arity: 1, HasNoCafRefs, Strictness: <S(SLLL),1*U(U,A,A,A)>,
     Unfolding: InlineRule (1, True, False)
                (\ (ds :: Lib.Opts) ->
                 case ds of wild { Lib.Opts ds1 ds2 ds3 ds4 -> ds1 }) -}
b6844c9519e0ea9591ab9d9f16a3223f
  parseArgs :: GHC.Types.IO ()
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: InlineRule (0, True, True)
                Lib.parseArgs1 `cast` (Sym (GHC.Types.N:IO[0] <()>_R)) -}
2773c4c04bb728bd94a3b5199e3f71ff
  parseArgs1 ::
    GHC.Prim.State# GHC.Prim.RealWorld
    -> (# GHC.Prim.State# GHC.Prim.RealWorld, () #)
  {- Arity: 1, Strictness: <S,U>,
     Unfolding: (\ (s :: GHC.Prim.State# GHC.Prim.RealWorld)[OneShot] ->
                 case Options.Applicative.Extra.customExecParser1
                        @ Lib.Opts
                        Options.Applicative.Builder.defaultPrefs
                        Lib.parseArgs2
                        s of ds1 { (#,#) ipv ipv1 ->
                 GHC.IO.Handle.Text.hPutStr2
                   GHC.IO.Handle.FD.stdout
                   (GHC.CString.unpackAppendCString#
                      "Hello, "#
                      (case ipv1 of wild { Lib.Opts ds ds2 ds3 ds4 ->
                       GHC.Base.++
                         @ GHC.Types.Char
                         ds4
                         (GHC.CString.unpackAppendCString#
                            ", the flag i is "#
                            (let {
                               arg :: [GHC.Types.Char]
                               = GHC.CString.unpackAppendCString#
                                   ", the flag i is "#
                                   (let {
                                      arg1 :: [GHC.Types.Char]
                                      = GHC.CString.unpackAppendCString#
                                          ", the flag 2 is "#
                                          (case ds3 of wild1 {
                                             GHC.Types.False -> GHC.Show.shows18
                                             GHC.Types.True -> GHC.Show.shows17 })
                                    } in
                                    case ds2 of wild1 {
                                      GHC.Types.False
                                      -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows18 arg1
                                      GHC.Types.True
                                      -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows17 arg1 })
                             } in
                             case ds of wild1 {
                               GHC.Types.False
                               -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows18 arg
                               GHC.Types.True
                               -> GHC.Base.++ @ GHC.Types.Char GHC.Show.shows17 arg })) }))
                   GHC.Types.True
                   ipv }) -}
84ea07a4749e8d4a43333869c956360a
  parseArgs10 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.parseArgs11) -}
b91c12b285e2be889072c6380a796d40
  parseArgs11 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Show version"#) -}
9b4b9e3538ef8192317f2fc6019e535a
  parseArgs12 ::
    [GHC.Types.Char]
    -> Data.Either.Either
         Options.Applicative.Types.ParseError (Lib.Opts -> Lib.Opts)
  {- Arity: 1,
     Unfolding: (\ (eta :: [GHC.Types.Char]) -> Lib.parseArgs_lvl8) -}
6de7feadfd81548cfb15fbf208925a68
  parseArgs13 :: Options.Applicative.Types.OptName
  {- Unfolding: (Options.Applicative.Types.OptLong
                   Lib.parseArgs14) -}
f8ec1724f7d4d5c3a9498bd7ee2490ef
  parseArgs14 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "version"#) -}
546211e7c9983df2be03cb082f878749
  parseArgs15 ::
    [Options.Applicative.Builder.Internal.Mod
       Options.Applicative.Builder.Internal.OptionFields
       (Lib.Opts -> Lib.Opts)]
  {- Unfolding: (GHC.Types.:
                   @ (Options.Applicative.Builder.Internal.Mod
                        Options.Applicative.Builder.Internal.OptionFields
                        (Lib.Opts -> Lib.Opts))
                   Lib.parseArgs16
                   (Options.Applicative.Builder.abortOption4 @ Lib.Opts)) -}
5a6c61092b9bf5733f350552e1912f5d
  parseArgs16 ::
    Options.Applicative.Builder.Internal.Mod
      Options.Applicative.Builder.Internal.OptionFields
      (Lib.Opts -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Builder.Internal.Mod
                   @ Options.Applicative.Builder.Internal.OptionFields
                   @ (Lib.Opts -> Lib.Opts)
                   Lib.parseArgs17
                   (Options.Applicative.Builder.Internal.$fMonoidDefaultProp_$cmempty
                      @ (Lib.Opts -> Lib.Opts))
                   (GHC.Base.id @ Options.Applicative.Types.OptProperties)) -}
d175f3c4ec66b9bbe59c2f32fedab932
  parseArgs17 ::
    Options.Applicative.Builder.Internal.OptionFields
      (Lib.Opts -> Lib.Opts)
    -> Options.Applicative.Builder.Internal.OptionFields
         (Lib.Opts -> Lib.Opts)
  {- Arity: 1,
     Unfolding: (\ (p :: Options.Applicative.Builder.Internal.OptionFields
                           (Lib.Opts -> Lib.Opts)) ->
                 case p of wild { Options.Applicative.Builder.Internal.OptionFields ds ds1 ds2 ->
                 Options.Applicative.Builder.Internal.OptionFields
                   @ (Lib.Opts -> Lib.Opts)
                   ds
                   ds1
                   Lib.parseArgs_w }) -}
9715864d533e486e4603b6ebca11412b
  parseArgs2 :: Options.Applicative.Types.ParserInfo Lib.Opts
  {- Unfolding: (Options.Applicative.Types.ParserInfo
                   @ Lib.Opts
                   Lib.parseArgs7
                   GHC.Types.True
                   Lib.parseArgs5
                   Lib.parseArgs3
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Options.Applicative.Builder.info1
                   GHC.Types.True) -}
ae86738e1f8ef4a28474808a77112a1a
  parseArgs3 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.parseArgs4) -}
6491deed85ac3e8b4d59f1db2d0a73c7
  parseArgs4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "BKG-2-CNF-program for converting any CFG to CNF"#) -}
fe6660e1e88c154b285e968c6aa78e86
  parseArgs5 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.parseArgs6) -}
0eb72c6cd16143837419d0ae36120abc
  parseArgs6 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "BKG-2-CNF"#) -}
95f5744d7090a37bf282ba498c29be2f
  parseArgs7 :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ Lib.Opts
                   Lib.parseArgs8
                   Lib.programOptions) -}
bda9289014c5d04f9ebf6f024f2a28dd
  parseArgs8 ::
    Options.Applicative.Types.Parser (Lib.Opts -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (Lib.Opts -> Lib.Opts)
                   @ (Lib.Opts -> Lib.Opts)
                   (Options.Applicative.Extra.helper @ (Lib.Opts -> Lib.Opts))
                   Lib.parseArgs9) -}
a2debee7be7167dfcb156acf6e4e2ce7
  parseArgs9 ::
    Options.Applicative.Types.Parser (Lib.Opts -> Lib.Opts)
  {- Unfolding: (case Options.Applicative.Builder.Internal.$fMonoidMod1
                        @ Options.Applicative.Builder.Internal.OptionFields
                        @ (Lib.Opts -> Lib.Opts)
                        Lib.parseArgs15 of ww4 { (#,,#) ww5 ww6 ww7 ->
                 case ww6 of wild1 { Options.Applicative.Builder.Internal.DefaultProp d2 s2 ->
                 Options.Applicative.Types.AltP
                   @ (Lib.Opts -> Lib.Opts)
                   (Options.Applicative.Types.OptP
                      @ (Lib.Opts -> Lib.Opts)
                      (let {
                         fields :: Options.Applicative.Builder.Internal.OptionFields
                                     (Lib.Opts -> Lib.Opts)
                         = case ww5
                                  (Options.Applicative.Builder.abortOption2
                                     @ (Lib.Opts
                                        -> Lib.Opts)) of wild { Options.Applicative.Builder.Internal.OptionFields ds ds1 ds2 ->
                           Options.Applicative.Builder.Internal.OptionFields
                             @ (Lib.Opts -> Lib.Opts)
                             (GHC.Types.:
                                @ Options.Applicative.Types.OptName
                                Lib.parseArgs13
                                ds)
                             ds1
                             ds2 }
                       } in
                       Options.Applicative.Types.Option
                         @ (Lib.Opts -> Lib.Opts)
                         (Options.Applicative.Types.OptReader
                            @ (Lib.Opts -> Lib.Opts)
                            (Options.Applicative.Builder.Internal.optNames
                               @ (Lib.Opts -> Lib.Opts)
                               fields)
                            (Options.Applicative.Types.CReader
                               @ (Lib.Opts -> Lib.Opts)
                               (Options.Applicative.Builder.Internal.optCompleter
                                  @ (Lib.Opts -> Lib.Opts)
                                  fields)
                               Lib.parseArgs12
                                 `cast`
                               (Trans
                                    (<[GHC.Types.Char]>_R
                                     ->_R Trans
                                              (Sym (Data.Functor.Identity.N:Identity[0]
                                                        <Data.Either.Either
                                                           Options.Applicative.Types.ParseError
                                                           (Lib.Opts -> Lib.Opts)>_R))
                                              (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                                        <Options.Applicative.Types.ParseError>_N
                                                        <Data.Functor.Identity.Identity>_R
                                                        <Lib.Opts -> Lib.Opts>_N)))
                                    (Trans
                                         (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                                   <*>_N
                                                   <[GHC.Types.Char]>_R
                                                   <Control.Monad.Trans.Except.ExceptT
                                                      Options.Applicative.Types.ParseError
                                                      Data.Functor.Identity.Identity>_R
                                                   <Lib.Opts -> Lib.Opts>_N))
                                         (Sym (Options.Applicative.Types.N:ReadM[0]) <Lib.Opts
                                                                                      -> Lib.Opts>_N))))
                            (Options.Applicative.Builder.Internal.optNoArgError
                               @ (Lib.Opts -> Lib.Opts)
                               fields))
                         (case ww7
                                 Options.Applicative.Builder.abortOption1 of wild { Options.Applicative.Types.OptProperties ds ds1 ds2 ds3 ->
                          Options.Applicative.Types.OptProperties
                            ds
                            Lib.parseArgs10
                            ds2
                            (case s2 of wild3 {
                               GHC.Base.Nothing -> GHC.Base.Nothing @ GHC.Base.String
                               GHC.Base.Just f
                               -> GHC.Base.$fApplicativeMaybe_$sliftM
                                    @ (Lib.Opts -> Lib.Opts)
                                    @ GHC.Base.String
                                    f
                                    d2 }) })))
                   (case d2 of wild {
                      GHC.Base.Nothing
                      -> Options.Applicative.Types.$fAlternativeParser_$cempty
                           @ (Lib.Opts -> Lib.Opts)
                      GHC.Base.Just x
                      -> Options.Applicative.Types.$fAlternativeParser_$cpure
                           @ (Lib.Opts -> Lib.Opts)
                           x }) } }) -}
62a3118eda3633153ea5168a6c409610
  parseArgs_lvl8 ::
    Data.Either.Either
      Options.Applicative.Types.ParseError (Lib.Opts -> Lib.Opts)
  {- Unfolding: (Data.Either.Left
                   @ Options.Applicative.Types.ParseError
                   @ (Lib.Opts -> Lib.Opts)
                   Lib.parseArgs_w) -}
6ea15006cf1703d82cbdde2652f52aad
  parseArgs_w :: Options.Applicative.Types.ParseError
  {- Unfolding: (Options.Applicative.Types.InfoMsg Lib.version) -}
e125f9389e59512c57bcee90eb1ca83d
  programOptions :: Options.Applicative.Types.Parser Lib.Opts
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ Lib.Opts
                   @ GHC.Base.String
                   Lib.programOptions13
                   Lib.programOptions1) -}
1b9e14f2c6e5f3e9ab3095da33ad471d
  programOptions1 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Base.String
                   Lib.programOptions5
                   Lib.programOptions2) -}
f9bc84b245d0c849034c4ca455cdf471
  programOptions10 ::
    Options.Applicative.Types.CReader GHC.Base.String
  {- HasNoCafRefs, Strictness: m,
     Unfolding: (Options.Applicative.Types.CReader
                   @ GHC.Base.String
                   Options.Applicative.Types.$fMonoidCompleter4
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Sym (GHC.Types.N:IO[0] <[GHC.Base.String]>_R))
                        (Sym (Options.Applicative.Types.N:Completer[0])))
                   (Data.Either.Right
                      @ Options.Applicative.Types.ParseError
                      @ GHC.Base.String)
                     `cast`
                   (Trans
                        (<GHC.Base.String>_R
                         ->_R Trans
                                  (Sym (Data.Functor.Identity.N:Identity[0]
                                            <Data.Either.Either
                                               Options.Applicative.Types.ParseError
                                               GHC.Base.String>_R))
                                  (Sym (Control.Monad.Trans.Except.N:ExceptT[0]
                                            <Options.Applicative.Types.ParseError>_N
                                            <Data.Functor.Identity.Identity>_R
                                            <GHC.Base.String>_N)))
                        (Trans
                             (Sym (Control.Monad.Trans.Reader.N:ReaderT[0]
                                       <*>_N
                                       <GHC.Base.String>_R
                                       <Control.Monad.Trans.Except.Except
                                          Options.Applicative.Types.ParseError>_R
                                       <GHC.Base.String>_N))
                             (Sym (Options.Applicative.Types.N:ReadM[0]) <GHC.Base.String>_N)))) -}
2ad6197e9c2a0b0aa561efd9ef4f3f69
  programOptions11 :: [Options.Applicative.Types.OptName]
  {- Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.programOptions_n
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
d9acd2847260233c788a889688d8937b
  programOptions12 :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "some-value"#) -}
ab49ec993e4815ef53f441f77c720e7b
  programOptions13 ::
    Options.Applicative.Types.Parser (GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Base.String -> Lib.Opts)
                   @ GHC.Types.Bool
                   Lib.programOptions24
                   Lib.programOptions14) -}
35838c99e6cfcb278f59606ead878e7e
  programOptions14 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.programOptions17
                   Lib.programOptions15) -}
7f35774dc4050390e91e18c2dc770c16
  programOptions15 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- HasNoCafRefs,
     Unfolding: (Options.Applicative.Types.NilP
                   @ GHC.Types.Bool
                   Lib.programOptions16) -}
da158ba7fea6754b7073d634638badfd
  programOptions16 :: GHC.Base.Maybe GHC.Types.Bool
  {- HasNoCafRefs,
     Unfolding: (GHC.Base.Just @ GHC.Types.Bool GHC.Types.False) -}
ef07a8bbab8dbdf798aa496f4c92356c
  programOptions17 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.programOptions18
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
27bf00bc98f675a761952fdb0b7bb7cd
  programOptions18 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.programOptions19) -}
3c5fc9a5262c70d836acf336eca6dbdc
  programOptions19 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.programOptions22
                   Lib.programOptions20) -}
a5588094c30a11bf2918d61e35b3fe94
  programOptions2 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Options.Applicative.Types.NilP
                   @ GHC.Base.String
                   Lib.programOptions3) -}
7a417a0a9782072ef45ad451c7bc8d31
  programOptions20 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.programOptions_lvl1
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
f4cf73a9ffd5fe5034e7ce2985f21dea
  programOptions21 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "Print CFG in CNF"#) -}
00470196e7a8bc2e41cc0571bedc29d0
  programOptions22 ::
    Options.Applicative.Types.OptReader GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.programOptions23
                   GHC.Types.True) -}
1a4922ebfffec40ec97c59ae97cb3394
  programOptions23 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.programOptions_n1
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
958422da854ed07ed33e9cd87e9f0ce1
  programOptions24 ::
    Options.Applicative.Types.Parser
      (GHC.Types.Bool -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.MultP
                   @ (GHC.Types.Bool -> GHC.Base.String -> Lib.Opts)
                   @ GHC.Types.Bool
                   Lib.programOptions33
                   Lib.programOptions25) -}
0ae5b30c22e35c766d70437eb4dd259d
  programOptions25 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.programOptions26
                   Lib.programOptions15) -}
b6c0e2233ddaaec7c604b87e7bf77a49
  programOptions26 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m4,
     Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.programOptions27
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
d657de7e5d5dedadce4fc72867bd9808
  programOptions27 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.programOptions28) -}
a8414cb487a4ee82a90d48c153d56985
  programOptions28 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.programOptions31
                   Lib.programOptions29) -}
9bc64785ee39ddee055d3a22fa0b3ccd
  programOptions29 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.programOptions_lvl2
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
6af3bed1eee4ec87df924d91168c8a6f
  programOptions3 :: GHC.Base.Maybe GHC.Base.String
  {- Strictness: m2,
     Unfolding: (GHC.Base.Just @ GHC.Base.String Lib.programOptions4) -}
4a3c78d91a370fecd8bb6588c4541dbd
  programOptions30 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Print CFG without simple rules"#) -}
2ffb5992d8983e1dad4a7e029aa2922f
  programOptions31 ::
    Options.Applicative.Types.OptReader GHC.Types.Bool
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.programOptions32
                   GHC.Types.True) -}
377770d3f079cea02330dc0fd46358e6
  programOptions32 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs, Strictness: m2,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.programOptions_n2
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
c3fe97ac225fe571a237d7946c421791
  programOptions33 ::
    Options.Applicative.Types.Parser
      (GHC.Types.Bool -> GHC.Types.Bool -> GHC.Base.String -> Lib.Opts)
  {- Unfolding: (Options.Applicative.Types.$fApplicativeParser_$cfmap
                   @ GHC.Types.Bool
                   @ (GHC.Types.Bool -> GHC.Types.Bool -> GHC.Base.String -> Lib.Opts)
                   Lib.$WOpts
                   Lib.programOptions34) -}
06810133576c4d13c152ad8e29948247
  programOptions34 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.programOptions35
                   Lib.programOptions15) -}
e49529a01c0e3dcffe4242aa170884d4
  programOptions35 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Unfolding: (Options.Applicative.Types.AltP
                   @ GHC.Types.Bool
                   Lib.programOptions36
                   (Options.Applicative.Types.$fAlternativeParser_$cempty
                      @ GHC.Types.Bool)) -}
c75510859bbec3718078809f5e4488ae
  programOptions36 :: Options.Applicative.Types.Parser GHC.Types.Bool
  {- Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Types.Bool
                   Lib.programOptions37) -}
bd4fd2ba16ce9444e7ebf2066e2a02e3
  programOptions37 :: Options.Applicative.Types.Option GHC.Types.Bool
  {- Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Types.Bool
                   Lib.programOptions41
                   Lib.programOptions38) -}
d8d529f621d444aed08f1480c314c9f0
  programOptions38 :: Options.Applicative.Types.OptProperties
  {- Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.programOptions39
                   (GHC.Types.[] @ GHC.Types.Char)
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
b31a3c0eba239ecfbdbb41a2fd3a8a60
  programOptions39 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.programOptions40) -}
69ae61993b0cad40653b8e678ad6ff51
  programOptions4 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString# "default"#) -}
951aaca448738d53fcae40e3b2213234
  programOptions40 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Print unchanged CFG"#) -}
3980ba1d4be41bd4bcdb738f7e597f17
  programOptions41 ::
    Options.Applicative.Types.OptReader GHC.Types.Bool
  {- HasNoCafRefs,
     Unfolding: (Options.Applicative.Types.FlagReader
                   @ GHC.Types.Bool
                   Lib.programOptions42
                   GHC.Types.True) -}
4fa8fc2b768b3039416f2b45536b067c
  programOptions42 :: [Options.Applicative.Types.OptName]
  {- HasNoCafRefs,
     Unfolding: (GHC.Types.:
                   @ Options.Applicative.Types.OptName
                   Lib.programOptions43
                   (GHC.Types.[] @ Options.Applicative.Types.OptName)) -}
98e75ff569ddad6d2fee675b32e43c1c
  programOptions43 :: Options.Applicative.Types.OptName
  {- HasNoCafRefs,
     Unfolding: (Options.Applicative.Types.OptShort 'i'#) -}
ab23b4ed15e96802cea5b5398b9a014e
  programOptions5 :: Options.Applicative.Types.Parser GHC.Base.String
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptP
                   @ GHC.Base.String
                   Lib.programOptions6) -}
f1a18534233aa80c1b0ba23920f0958a
  programOptions6 :: Options.Applicative.Types.Option GHC.Base.String
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.Option
                   @ GHC.Base.String
                   Lib.programOptions9
                   Lib.programOptions7) -}
8acb274a25db3a71a4b3341547a1f7d6
  programOptions7 :: Options.Applicative.Types.OptProperties
  {- Strictness: m,
     Unfolding: (Options.Applicative.Types.OptProperties
                   Options.Applicative.Types.Visible
                   Lib.programOptions_lvl8
                   Lib.programOptions_var
                   (GHC.Base.Nothing @ GHC.Base.String)) -}
7f38cc3718b507ab0ce5235bba3dfc30
  programOptions8 :: [GHC.Types.Char]
  {- Unfolding: (GHC.CString.unpackCString#
                   "Override default name"#) -}
e987f2d54e2e25f4978fb59304d89fed
  programOptions9 ::
    Options.Applicative.Types.OptReader GHC.Base.String
  {- Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptReader
                   @ GHC.Base.String
                   Lib.programOptions11
                   Lib.programOptions10
                   Options.Applicative.Builder.abortOption3) -}
e671ae15c07659234ac1ad52bbcc9f9d
  programOptions_lvl1 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.programOptions21) -}
04393d6e7f587d359c4461bd3aa17327
  programOptions_lvl2 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.programOptions30) -}
2ba8494d4e859bc3bfc0ecc6d8cfac97
  programOptions_lvl8 ::
    Options.Applicative.Help.Chunk.Chunk
      Text.PrettyPrint.ANSI.Leijen.Doc
  {- Unfolding: (Data.OldList.wordsFB
                   @ (Options.Applicative.Help.Chunk.Chunk
                        Text.PrettyPrint.ANSI.Leijen.Doc)
                   Options.Applicative.Help.Chunk.paragraph1
                   (GHC.Base.Nothing @ Text.PrettyPrint.ANSI.Leijen.Doc)
                     `cast`
                   (Sym (Options.Applicative.Help.Chunk.N:Chunk[0]) <Text.PrettyPrint.ANSI.Leijen.Doc>_N)
                   Lib.programOptions8) -}
7bd3e178de87039e622fece7d6e866c3
  programOptions_n :: Options.Applicative.Types.OptName
  {- Strictness: m2,
     Unfolding: (Options.Applicative.Types.OptLong
                   Lib.programOptions12) -}
5a17f3f98f052504aabf49fa8e978739
  programOptions_n1 :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort '2'#) -}
ac7025e6ae24cb5c28215f3f834b61e2
  programOptions_n2 :: Options.Applicative.Types.OptName
  {- HasNoCafRefs, Strictness: m1,
     Unfolding: (Options.Applicative.Types.OptShort '1'#) -}
b8a85b2600f2a13a12eedde6335444b9
  programOptions_var :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "VALUE"#) -}
4d5be28a33284064a764fcafa152eeb8
  version :: GHC.Base.String
  {- Unfolding: (GHC.CString.unpackCString# "0.1"#) -}
vectorised variables:
vectorised tycons:
vectorised reused tycons:
parallel variables:
parallel tycons:
trusted: safe
require own pkg trusted: False

